rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /{document=**} {
      allow read, write: if
          request.time < timestamp.date(2030, 5, 16);
    }

    // Usersコレクション
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create;

      match /private {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // DirectRoomsコレクション
    match /directRooms/{roomId} {
      // ユーザがroomsのメンバーであることを確認
      function isRoomMember() {
        return request.auth.uid != null && (request.auth.uid == resource.data.user1 || request.auth.uid == resource.data.user2);
      }

      // ユーザが相手と友達であることを確認
      function isFriendWithOther() {
        let otherUserId = (request.auth.uid == resource.data.user1) ? resource.data.user2 : resource.data.user1;
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)/private/friends/$(otherUserId));
      }

      allow read, update, delete: if isRoomMember();
      allow create: if request.auth.uid != null && isFriendWithOther();
    }

    // Roomsコレクション
    match /rooms/{roomId} {
      // ログインしているユーザが作成と読み取り可能
      allow create,read: if request.auth != null;

      // roomの更新、削除はroomに参加しているユーザのみ可能
      allow update, delete: if request.auth != null && request.auth.uid in resource.data.members;
    }

    // Messagesコレクション
    match /databases/{database}/documents {
      function isSignedIn() {
        return request.auth != null;
      }

      function isSender() {
        return request.auth.uid == resource.data.senderId;
      }

      function isInRoom() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.private.rooms.has(resource.data.roomId);
      }

      match /messages/{messageId} {
        // ユーザが参加しているdirectRoomIdまたはroomIdについてメッセージの作成が可能
        allow create: if isSignedIn() && isInRoom();

        // ユーザが参加しているdirectRoomIdまたはroomIdについてメッセージの読み取りが可能
        allow read: if isSignedIn() && isInRoom();

        // 更新、削除は自分のみ可能
        allow update, delete: if isSignedIn() && isSender();
      }
    }
  }
}